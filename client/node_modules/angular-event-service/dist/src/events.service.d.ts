/**
 * Send and receive events with the .on .broadcast syntax.
 */
export declare class EventsService {
    private listeners;
    private eventsSubject;
    private events;
    constructor();
    /**
     * Listens an event and broadcasts it to the listeners.
     * @param  {string} name Event name
     * @param  {any} listener Function to call when receiving an event
     */
    on(name: string, listener: any): void;
    /**
     * Emits an event to all the listeners.
     * @param {string} name Name of the event to broadcast
     * @param {Array<any>} args Payload of arguments to send.
     */
    broadcast(name: string, ...args: Array<any>): void;
    /**
     * Destroys the listener from the listener list.
     * @param  {string} name Event name
     * @param  {any} listener Callback function to delete
     */
    destroyListener(name: string, listener: any): void;
}
